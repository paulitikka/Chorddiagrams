Matrix <- matrix(0, nrow = length(Treatment), ncol = length(Mediator_ok))
myData <- data.frame(matrix = Matrix)
colnames(myData) <- Mediator_ok; rownames(myData) <- Treatment
}}} else if (switch==2) {
Treatment=colnames(tv_all)[9:28]; # These names are a bit mixed, by the idea is ok.
Mediator_ok=Outcome[Outcome %in% names(table(hoi[1:dim(hoi)[1],c(3)]))]
# df = data.frame(matrix("", nrow = length(Treatment), ncol = length(Mediator_ok)))
for (i in 1:length(Treatment)) {for (j in 1:length(Mediator_ok)) {
if (z=='dir') {
indir=append(indir,rt2[which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(5)]) #or c(1) hoi 1
ip=append(ip,rt2[which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(6)])} else  {
indir=append(indir,rt2[which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(1)]) #or c(1) hoi 1
ip=append(ip,rt2[which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(2)])}
rn=append(rn,hoi[,3][which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1]]) #change this...
rn2=append(rn2,hoi[,2][which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1]])
Matrix <- matrix(0, nrow = length(Treatment), ncol = length(Mediator_ok))
myData <- data.frame(matrix = Matrix)
colnames(myData) <- Mediator_ok; rownames(myData) <- Treatment
}}} # You need three of these, yes :)
tot=cbind(rn2,rn,indir) #or indir or dir
tot=tot[!is.na(tot[,1]),]
tot=as.data.frame(tot)#
uu=data.frame();hou=c()
for (i in 1:length(Treatment)) {hou=names( table(tot[tot[,1]==Treatment[i],2])[table(tot[tot[,1]==Treatment[i],2])>0]);#print(hou)
for (j in 1:length(hou)) {uu=rbind(uu, max(tot[tot[,1]==Treatment[i] & tot[,2]==hou[j],3]))}} #
rr=data.frame()
for (i in 1:length(Treatment)) {hou=names( table(tot[tot[,1]==Treatment[i],2])[table(tot[tot[,1]==Treatment[i],2])>0]);#print(hou)
for (j in 1:length(hou)) {rr=rbind(rr, rownames(tot[tot[,3] == max(tot[tot[,1]==Treatment[i] & tot[,2]==hou[j],3]),]))}} #
uim=cbind(uu,rr)
tot=tot[uim[,2],]
library(reshape2)
jops=dcast(tot, rn2~rn, value.var='indir')
jops[is.na(jops)]=0
rownames(jops)=jops[,1]
jops=jops[,2:dim(jops)[2]]
jops=as.data.frame(jops)
jopsr=matrix(as.numeric(unlist(jops)),nrow=dim(jops)[1],ncol=dim(jops)[2])
colnames(jopsr)=colnames(jops);rownames(jopsr)=rownames(jops)
# print(dim(jopsr)[1] == dim(myData)[1]);print(dim(jopsr)[2] == dim(myData)[2])
if (sum(!rownames(myData) %in% rownames(jopsr))>0) {
to_df=rownames(myData)[!rownames(myData) %in% rownames(jopsr)]
jopsr=rbind(jopsr,myData[to_df,]); jopsr=jopsr[rownames(myData),]}
if (sum(!colnames(myData) %in% colnames(jopsr))>0) {
to_df=colnames(myData)[!colnames(myData) %in% colnames(jopsr)]
jopsr=cbind(jopsr,myData[,to_df]); jopsr=jopsr[,colnames(myData)]}
# if (switch==1) {
#   #for direct:
#   jopsr=jopsr[,Outcome[Outcome %in% colnames(jopsr)]] #c
# } else if (switch==0 ) {
#   #for indirect:
#   ums=groups[order(groups[,'Group']),'Abbreviation']
#   jopsr=jopsr[,ums[ums %in% colnames(jopsr)]]
# }
tot=cbind(rn2,rn,ip)
tot=tot[!is.na(tot[,1]),]
tot=as.data.frame(tot)
tot=tot[uim[,2],]
library(reshape2)
jopsa=dcast(tot, rn2~rn, value.var='ip')
jopsa[is.na(jopsa)]=0
rownames(jopsa)=jopsa[,1]
jopsa=jopsa[,2:dim(jopsa)[2]]
jopsra=matrix(as.numeric(unlist(jopsa)),nrow=dim(jopsa)[1],ncol=dim(jopsa)[2])
colnames(jopsra)=colnames(jopsa);rownames(jopsra)=rownames(jopsa)
colnames(jopsra)=colnames(jopsa);rownames(jopsra)=rownames(jopsa)
if (sum(!rownames(myData) %in% rownames(jopsra))>0) {
to_df=rownames(myData)[!rownames(myData) %in% rownames(jopsra)]
jopsra=rbind(jopsra,myData[to_df,]); jopsra=jopsra[rownames(myData),]}
if (sum(!colnames(myData) %in% colnames(jopsra))>0) {
to_df=colnames(myData)[!colnames(myData) %in% colnames(jopsra)]
jopsra=cbind(jopsra,myData[,to_df]); jopsra=jopsra[,colnames(myData)]}
# df
if (switch==1) {
#for direct:
# jopsra=jopsra[,Outcome[Outcome %in% colnames(jopsra)]];
# jopsr=jopsr[,Outcome[Outcome %in% colnames(jopsr)]]
# jopsra=jopsra[groups[,'Abbreviation'][groups[,'Abbreviation'] %in% rownames(jopsra)],]
# jopsr=jopsr[groups[,'Abbreviation'][groups[,'Abbreviation'] %in% rownames(jopsr)],]
} else if (switch==0) {
#for indirect
jopsra=jopsra[,groups[,'Abbreviation'][groups[,'Abbreviation'] %in% colnames(jopsra)]]
# jopsra=jopsra[,groups[,'Abbreviation'][groups[,'Abbreviation'] %in% colnames(jopsra)]]
#groups[,'Abbreviation'][groups[,'Abbreviation'] %in% colnames(jopsra)]
# jopsra=jopsra[,ums[ums %in% colnames(jopsr)]]
jopsr=jopsr[,groups[,'Abbreviation'][groups[,'Abbreviation'] %in% colnames(jopsr)]]
} else if (switch==2) {
jopsra=jopsra[groups[,'Abbreviation'],]
jopsr=jopsr[groups[,'Abbreviation'],]
# #groups[,'Abbreviation'][groups[,'Abbreviation'] %in% colnames(jopsra)]
# ums=groups[,'Abbreviation']
# jopsra=jopsra[ums,];
# jopsr=jopsr[ums,]
}
setwd("C:/Users/patati/Desktop/TurkuOW/RWork/") #check this if needed...
hip1='transpose';pch.cex=2; #width = 5000;height=2000 width = 2500;height=4000 width = 4000;height=2500;
ho=paste('PFAS vs. bas and lipids_ for the hypo_basic_colors_stea', switch)
if (dim(jopsr)[1]==7) {width = 4000;height=1500} else if (dim(jopsr)[1]==20) {width = 4000;height=2500} else if (dim(jopsr)[1]==36) {width = 2500;height=5000}
resulta1=jopsr
p.mat.a1=jopsra
#https://www.rdocumentation.org/packages/corrplot/versions/0.92/topics/corrplot
#https://cran.r-project.org/web/packages/corrplot/vignettes/corrplot-intro.html
#https://statisticsglobe.com/change-font-size-corrplot-r
#order can be: alphabet, hclust, original #https://stackoverflow.com/questions/51115495/how-to-keep-order-of-the-correlation-plot-labels-as-same-in-the-datafile
order="original"; range='orig';corre='no_renormaa'; type='full'; method='color';ga='All';gf='Female';gm='Male' #color square
cl.offset=20;cl.length=5;cl.cex = 1.3;pch.cex=1.95;pch=3;cl.pos = 'r'; #cl.offset=2;cl.length=5;cl.cex = 1.3;pch.cex=1.95;pch=14;
if (switch==1) {rbo=rev(COL2('RdBu')[25:(length(COL2('RdBu'))-25)]) } else if (switch==0  | switch==2) {rbo=rev(COL2('RdBu')[25:100]) }
# This has been driven:
# resulta1=resulta1[,colnames(resulta2)] #In case you need the column names elsewhere
# for (i in 1:dim(resulta1)[1]) {for (j in 1:dim(resulta1)[2]) {if (resulta1[i,j]==0) {p.mat.a1[i,j]=0.5}}}
# p.mat.a1$column <- unlist(p.mat.a1$column)
# resulta1$column <- unlist(resulta1$column)
# resulta1 <- as.matrix(resulta1); resulta1 <- as.matrix(p.mat.a1)
# resulta1 <- as.matrix(m1);p.mat.a1 <- as.matrix(m4)
# resulta1 <- as.matrix(the_real);p.mat.a1 <- as.matrix(the_real2)
# rbo=rev(COL2('RdBu')[25:(length(COL2('RdBu'))-25)])
# With the neg. you do not put these:
if (dim(resulta1)[2]==36) {
Outcome=colnames(tv_covNS)[c(29:51,59:71)];
Outcome=Outcome[c(1,23,2:22,24:length(Outcome))]
resulta1=resulta1[,Outcome[Outcome %in% colnames(resulta1) ]];p.mat.a1=p.mat.a1[,Outcome[Outcome %in% colnames(p.mat.a1) ]] }
for (i in 1:dim(resulta1)[1]) {for (j in 1:dim(resulta1)[2]) {if (resulta1[i,j]==0) {p.mat.a1[i,j]=0.5}}}
# resulta1 <- t(resulta1);
# p.mat.a1 <- t(p.mat.a1)
path="C:/Users/patati/Documents/GitHub/new/"; setwd(path) #check this if needed...
jpeg(paste("Heatmap of high ACMEs_thusa_real_v7ssaa",date, mn,ho,ga,hip1,".jpg"), width = width, height = height, quality = 100,pointsize = 14, res=300);# par( ps=ps)# par(cex.lab=90) 22 18
# col = brewer.pal(n = 9, name = "YlOrRd")
col=colorRampPalette(c('blue', 'white','orange'), alpha = TRUE)(150)
# col=colorRampPalette(c( 'white','orange'), alpha = TRUE)(150)
# if (corr==TRUE) {if (min(as.matrix(resulta1))< -1  | max(as.matrix(resulta1))> 1) {resulta1=rango(resulta1,-1,1)}} else if (min(as.matrix(resulta1)) >= 0)  {resulta1=rango(resulta1,-1,1)} #
# resulta1=rango(resulta1,-1,1)
# if (min(as.matrix(resulta1)) >= 0  | max(as.matrix(resulta1)) <= 0) {resulta1=rango(resulta1,-1,1)}
corrplot(as.matrix(resulta1), type = type, order = order,method=method, p.mat=as.matrix(p.mat.a1), tl.col = "black", #sum(COL2('RdBu')=="#FF7417")
cl.cex = cl.cex, pch.cex=pch.cex, pch.col='black',pch=pch,#pitikö vain pch lisätä pch väriin väriin... mystistä...'#FEE12B'
sig.level = c(.05),cl.pos = cl.pos, insig = "label_sig", cl.offset=cl.offset,cl.length=cl.length,
tl.srt = 90, diag = TRUE,col=col,is.corr = corr) #only in age...0.001, #rev(COL2('RdBu')[25:(length(COL2('RdBu'))-25)])
#non were significant in neg... but after mody yes!
dev.off()
return(list(resulta1,p.mat.a1))
}
uliulie2=houdees(hoi, Outcome, Mediator,switch=0,mn='indir_small',z,corr,date); dim(uliulie2[[1]]) # Indirect v1 effect
#Switch = 0: PFAS vs steroids; switch=1: PFAS vs BAs and lipids, switch=2: steroids vs BAs and lipids (0-2 with both ACME and ADE (z='dir'))
houdees=function(hoi, Outcome, Mediator,switch,mn,z,corr,date) {
indir=c(); dir=c(); ip=c();rn=c();rn2=c()
Outcome=colnames(tv_covNS)[c(29:51,59:71)]; #The final dataframe is shorter or the like so there were less variables here...
Treatment=colnames(tv_covNS)[52:58];
##https://sparkbyexamples.com/r-programming/r-remove-from-vector-with-examples/
#direct...
if (switch==1) {
Mediator_ok=Outcome[Outcome %in% names(table(hoi[1:dim(hoi)[1],c(3)]))]
for (i in 1:7) {for (j in 1:length(Mediator_ok)) {
if (z=='dir') {
indir=append(indir,rt2[which(hoi[,1]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(5)]) #or c(1) hoi 1 or 5 (5 is orig)
ip=append(ip,rt2[which(hoi[,1]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(6)])} else {
indir=append(indir,rt2[which(hoi[,1]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(1)]) #or c(1) hoi 1 or 5 (5 is orig)
ip=append(ip,rt2[which(hoi[,1]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(2)])}
rn=append(rn,hoi[,3][which(hoi[,1]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1]]) #change this...
rn2=append(rn2,hoi[,1][which(hoi[,1]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1]])
Matrix <- matrix(0, nrow = length(Treatment), ncol = length(Mediator_ok))
myData <- data.frame(matrix = Matrix)
colnames(myData) <- Mediator_ok; rownames(myData) <- Treatment
}}} else if (switch==0) {
# indir:
Mediator_ok=Mediator[Mediator %in% names(table(hoi[1:dim(hoi)[1],c(2)]))]
for (i in 1:7) {for (j in 1:length(Mediator_ok)) {
if (z=='dir') {indir=append(indir,rt2[which(hoi[,1]==Treatment[i] & hoi[,2]==Mediator_ok[j])[1],c(5)]) #or c(1) hoi 1
ip=append(ip,rt2[which(hoi[,1]==Treatment[i] & hoi[,2]==Mediator_ok[j])[1],c(6)])} else {
indir=append(indir,rt2[which(hoi[,1]==Treatment[i] & hoi[,2]==Mediator_ok[j])[1],c(1)]) #or c(1) hoi 1
ip=append(ip,rt2[which(hoi[,1]==Treatment[i] & hoi[,2]==Mediator_ok[j])[1],c(2)])}
rn=append(rn,hoi[,2][which(hoi[,1]==Treatment[i] & hoi[,2]==Mediator_ok[j])[1]]) #change this...
rn2=append(rn2,hoi[,1][which(hoi[,1]==Treatment[i] & hoi[,2]==Mediator_ok[j])[1]])
Matrix <- matrix(0, nrow = length(Treatment), ncol = length(Mediator_ok))
myData <- data.frame(matrix = Matrix)
colnames(myData) <- Mediator_ok; rownames(myData) <- Treatment
}}} else if (switch==2) {
Treatment=colnames(tv_all)[9:28]; # These names are a bit mixed, by the idea is ok.
Mediator_ok=Outcome[Outcome %in% names(table(hoi[1:dim(hoi)[1],c(3)]))]
# df = data.frame(matrix("", nrow = length(Treatment), ncol = length(Mediator_ok)))
for (i in 1:length(Treatment)) {for (j in 1:length(Mediator_ok)) {
if (z=='dir') {
indir=append(indir,rt2[which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(5)]) #or c(1) hoi 1
ip=append(ip,rt2[which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(6)])} else  {
indir=append(indir,rt2[which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(1)]) #or c(1) hoi 1
ip=append(ip,rt2[which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(2)])}
rn=append(rn,hoi[,3][which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1]]) #change this...
rn2=append(rn2,hoi[,2][which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1]])
Matrix <- matrix(0, nrow = length(Treatment), ncol = length(Mediator_ok))
myData <- data.frame(matrix = Matrix)
colnames(myData) <- Mediator_ok; rownames(myData) <- Treatment
}}} # You need three of these, yes :)
tot=cbind(rn2,rn,indir) #or indir or dir
tot=tot[!is.na(tot[,1]),]
tot=as.data.frame(tot)#
uu=data.frame();hou=c()
for (i in 1:length(Treatment)) {hou=names( table(tot[tot[,1]==Treatment[i],2])[table(tot[tot[,1]==Treatment[i],2])>0]);#print(hou)
for (j in 1:length(hou)) {uu=rbind(uu, max(tot[tot[,1]==Treatment[i] & tot[,2]==hou[j],3]))}} #
rr=data.frame()
for (i in 1:length(Treatment)) {hou=names( table(tot[tot[,1]==Treatment[i],2])[table(tot[tot[,1]==Treatment[i],2])>0]);#print(hou)
for (j in 1:length(hou)) {rr=rbind(rr, rownames(tot[tot[,3] == max(tot[tot[,1]==Treatment[i] & tot[,2]==hou[j],3]),]))}} #
uim=cbind(uu,rr)
tot=tot[uim[,2],]
library(reshape2)
jops=dcast(tot, rn2~rn, value.var='indir')
jops[is.na(jops)]=0
rownames(jops)=jops[,1]
jops=jops[,2:dim(jops)[2]]
jops=as.data.frame(jops)
jopsr=matrix(as.numeric(unlist(jops)),nrow=dim(jops)[1],ncol=dim(jops)[2])
colnames(jopsr)=colnames(jops);rownames(jopsr)=rownames(jops)
# print(dim(jopsr)[1] == dim(myData)[1]);print(dim(jopsr)[2] == dim(myData)[2])
if (sum(!rownames(myData) %in% rownames(jopsr))>0) {
to_df=rownames(myData)[!rownames(myData) %in% rownames(jopsr)]
jopsr=rbind(jopsr,myData[to_df,]); jopsr=jopsr[rownames(myData),]}
if (sum(!colnames(myData) %in% colnames(jopsr))>0) {
to_df=colnames(myData)[!colnames(myData) %in% colnames(jopsr)]
jopsr=cbind(jopsr,myData[,to_df]); jopsr=jopsr[,colnames(myData)]}
# if (switch==1) {
#   #for direct:
#   jopsr=jopsr[,Outcome[Outcome %in% colnames(jopsr)]] #c
# } else if (switch==0 ) {
#   #for indirect:
#   ums=groups[order(groups[,'Group']),'Abbreviation']
#   jopsr=jopsr[,ums[ums %in% colnames(jopsr)]]
# }
tot=cbind(rn2,rn,ip)
tot=tot[!is.na(tot[,1]),]
tot=as.data.frame(tot)
tot=tot[uim[,2],]
library(reshape2)
jopsa=dcast(tot, rn2~rn, value.var='ip')
jopsa[is.na(jopsa)]=0
rownames(jopsa)=jopsa[,1]
jopsa=jopsa[,2:dim(jopsa)[2]]
jopsra=matrix(as.numeric(unlist(jopsa)),nrow=dim(jopsa)[1],ncol=dim(jopsa)[2])
colnames(jopsra)=colnames(jopsa);rownames(jopsra)=rownames(jopsa)
colnames(jopsra)=colnames(jopsa);rownames(jopsra)=rownames(jopsa)
if (sum(!rownames(myData) %in% rownames(jopsra))>0) {
to_df=rownames(myData)[!rownames(myData) %in% rownames(jopsra)]
jopsra=rbind(jopsra,myData[to_df,]); jopsra=jopsra[rownames(myData),]}
if (sum(!colnames(myData) %in% colnames(jopsra))>0) {
to_df=colnames(myData)[!colnames(myData) %in% colnames(jopsra)]
jopsra=cbind(jopsra,myData[,to_df]); jopsra=jopsra[,colnames(myData)]}
# df
if (switch==1) {
#for direct:
# jopsra=jopsra[,Outcome[Outcome %in% colnames(jopsra)]];
# jopsr=jopsr[,Outcome[Outcome %in% colnames(jopsr)]]
# jopsra=jopsra[groups[,'Abbreviation'][groups[,'Abbreviation'] %in% rownames(jopsra)],]
# jopsr=jopsr[groups[,'Abbreviation'][groups[,'Abbreviation'] %in% rownames(jopsr)],]
} else if (switch==0) {
#for indirect
jopsra=jopsra[,groups[,'Abbreviation'][groups[,'Abbreviation'] %in% colnames(jopsra)]]
# jopsra=jopsra[,groups[,'Abbreviation'][groups[,'Abbreviation'] %in% colnames(jopsra)]]
#groups[,'Abbreviation'][groups[,'Abbreviation'] %in% colnames(jopsra)]
# jopsra=jopsra[,ums[ums %in% colnames(jopsr)]]
jopsr=jopsr[,groups[,'Abbreviation'][groups[,'Abbreviation'] %in% colnames(jopsr)]]
} else if (switch==2) {
jopsra=jopsra[groups[,'Abbreviation'],]
jopsr=jopsr[groups[,'Abbreviation'],]
# #groups[,'Abbreviation'][groups[,'Abbreviation'] %in% colnames(jopsra)]
# ums=groups[,'Abbreviation']
# jopsra=jopsra[ums,];
# jopsr=jopsr[ums,]
}
setwd("C:/Users/patati/Desktop/TurkuOW/RWork/") #check this if needed...
hip1='transpose';pch.cex=2; #width = 5000;height=2000 width = 2500;height=4000 width = 4000;height=2500;
ho=paste('PFAS vs. bas and lipids_ for the hypo_basic_colors_stea', switch)
if (dim(jopsr)[1]==7) {width = 4000;height=1500} else if (dim(jopsr)[1]==20) {width = 4000;height=2500} else if (dim(jopsr)[1]==36) {width = 2500;height=5000}
resulta1=jopsr
p.mat.a1=jopsra
#https://www.rdocumentation.org/packages/corrplot/versions/0.92/topics/corrplot
#https://cran.r-project.org/web/packages/corrplot/vignettes/corrplot-intro.html
#https://statisticsglobe.com/change-font-size-corrplot-r
#order can be: alphabet, hclust, original #https://stackoverflow.com/questions/51115495/how-to-keep-order-of-the-correlation-plot-labels-as-same-in-the-datafile
order="original"; range='orig';corre='no_renormaa'; type='full'; method='color';ga='All';gf='Female';gm='Male' #color square
cl.offset=20;cl.length=5;cl.cex = 1.3;pch.cex=1.95;pch=3;cl.pos = 'r'; #cl.offset=2;cl.length=5;cl.cex = 1.3;pch.cex=1.95;pch=14;
if (switch==1) {rbo=rev(COL2('RdBu')[25:(length(COL2('RdBu'))-25)]) } else if (switch==0  | switch==2) {rbo=rev(COL2('RdBu')[25:100]) }
# This has been driven:
# resulta1=resulta1[,colnames(resulta2)] #In case you need the column names elsewhere
# for (i in 1:dim(resulta1)[1]) {for (j in 1:dim(resulta1)[2]) {if (resulta1[i,j]==0) {p.mat.a1[i,j]=0.5}}}
# p.mat.a1$column <- unlist(p.mat.a1$column)
# resulta1$column <- unlist(resulta1$column)
# resulta1 <- as.matrix(resulta1); resulta1 <- as.matrix(p.mat.a1)
# resulta1 <- as.matrix(m1);p.mat.a1 <- as.matrix(m4)
# resulta1 <- as.matrix(the_real);p.mat.a1 <- as.matrix(the_real2)
# rbo=rev(COL2('RdBu')[25:(length(COL2('RdBu'))-25)])
# With the neg. you do not put these:
if (dim(resulta1)[2]==36) {
Outcome=colnames(tv_covNS)[c(29:51,59:71)];
Outcome=Outcome[c(1,23,2:22,24:length(Outcome))]
resulta1=resulta1[,Outcome[Outcome %in% colnames(resulta1) ]];p.mat.a1=p.mat.a1[,Outcome[Outcome %in% colnames(p.mat.a1) ]] }
for (i in 1:dim(resulta1)[1]) {for (j in 1:dim(resulta1)[2]) {if (resulta1[i,j]==0) {p.mat.a1[i,j]=0.5}}}
# resulta1 <- t(resulta1);
# p.mat.a1 <- t(p.mat.a1)
path="C:/Users/patati/Documents/GitHub/new/"; setwd(path) #check this if needed...
jpeg(paste("Heatmap of high ACMEs_thusa_real_v7ssaa",date, mn,ho,ga,hip1,".jpg"), width = width, height = height, quality = 100,pointsize = 14, res=300);# par( ps=ps)# par(cex.lab=90) 22 18
# col = brewer.pal(n = 9, name = "YlOrRd")
# col=colorRampPalette(c('blue', 'white','orange'), alpha = TRUE)(150)
col=colorRampPalette(c( 'white','orange'), alpha = TRUE)(150)
# if (corr==TRUE) {if (min(as.matrix(resulta1))< -1  | max(as.matrix(resulta1))> 1) {resulta1=rango(resulta1,-1,1)}} else if (min(as.matrix(resulta1)) >= 0)  {resulta1=rango(resulta1,-1,1)} #
# resulta1=rango(resulta1,-1,1)
# if (min(as.matrix(resulta1)) >= 0  | max(as.matrix(resulta1)) <= 0) {resulta1=rango(resulta1,-1,1)}
corrplot(as.matrix(resulta1), type = type, order = order,method=method, p.mat=as.matrix(p.mat.a1), tl.col = "black", #sum(COL2('RdBu')=="#FF7417")
cl.cex = cl.cex, pch.cex=pch.cex, pch.col='black',pch=pch,#pitikö vain pch lisätä pch väriin väriin... mystistä...'#FEE12B'
sig.level = c(.05),cl.pos = cl.pos, insig = "label_sig", cl.offset=cl.offset,cl.length=cl.length,
tl.srt = 90, diag = TRUE,col=col,is.corr = corr) #only in age...0.001, #rev(COL2('RdBu')[25:(length(COL2('RdBu'))-25)])
#non were significant in neg... but after mody yes!
dev.off()
return(list(resulta1,p.mat.a1))
}
# uliulie2=houdees(hoi, Outcome, Mediator,switch=2,mn='indiruus',z,corr,date); dim(uliulie2[[1]]) # Indirect v1 effect
# uliulie2=houdees(hoi, Outcome, Mediator,switch=1,mn='diruus',z,corr,date); dim(uliulie2[[1]]) # Indirect v1 effect
z='idir'
uliulie2=houdees(hoi, Outcome, Mediator,switch=0,mn='indir_small',z,corr,date); dim(uliulie2[[1]]) # Indirect v1 effect
#
z='dir'
uliulie2=houdees(hoi, Outcome, Mediator,switch=2,mn='dir_small',z,corr,date); dim(uliulie2[[1]]) # Indirect v1 effect
#
z='dir'
uliulie2=houdees(hoi, Outcome, Mediator,switch=0,mn='dir_small',z,corr,date); dim(uliulie2[[1]]) # Indirect v1 effect
#Switch = 0: PFAS vs steroids; switch=1: PFAS vs BAs and lipids, switch=2: steroids vs BAs and lipids (0-2 with both ACME and ADE (z='dir'))
houdees=function(hoi, Outcome, Mediator,switch,mn,z,corr,date) {
indir=c(); dir=c(); ip=c();rn=c();rn2=c()
Outcome=colnames(tv_covNS)[c(29:51,59:71)]; #The final dataframe is shorter or the like so there were less variables here...
Treatment=colnames(tv_covNS)[52:58];
##https://sparkbyexamples.com/r-programming/r-remove-from-vector-with-examples/
#direct...
if (switch==1) {
Mediator_ok=Outcome[Outcome %in% names(table(hoi[1:dim(hoi)[1],c(3)]))]
for (i in 1:7) {for (j in 1:length(Mediator_ok)) {
if (z=='dir') {
indir=append(indir,rt2[which(hoi[,1]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(5)]) #or c(1) hoi 1 or 5 (5 is orig)
ip=append(ip,rt2[which(hoi[,1]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(6)])} else {
indir=append(indir,rt2[which(hoi[,1]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(1)]) #or c(1) hoi 1 or 5 (5 is orig)
ip=append(ip,rt2[which(hoi[,1]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(2)])}
rn=append(rn,hoi[,3][which(hoi[,1]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1]]) #change this...
rn2=append(rn2,hoi[,1][which(hoi[,1]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1]])
Matrix <- matrix(0, nrow = length(Treatment), ncol = length(Mediator_ok))
myData <- data.frame(matrix = Matrix)
colnames(myData) <- Mediator_ok; rownames(myData) <- Treatment
}}} else if (switch==0) {
# indir:
Mediator_ok=Mediator[Mediator %in% names(table(hoi[1:dim(hoi)[1],c(2)]))]
for (i in 1:7) {for (j in 1:length(Mediator_ok)) {
if (z=='dir') {indir=append(indir,rt2[which(hoi[,1]==Treatment[i] & hoi[,2]==Mediator_ok[j])[1],c(5)]) #or c(1) hoi 1
ip=append(ip,rt2[which(hoi[,1]==Treatment[i] & hoi[,2]==Mediator_ok[j])[1],c(6)])} else {
indir=append(indir,rt2[which(hoi[,1]==Treatment[i] & hoi[,2]==Mediator_ok[j])[1],c(1)]) #or c(1) hoi 1
ip=append(ip,rt2[which(hoi[,1]==Treatment[i] & hoi[,2]==Mediator_ok[j])[1],c(2)])}
rn=append(rn,hoi[,2][which(hoi[,1]==Treatment[i] & hoi[,2]==Mediator_ok[j])[1]]) #change this...
rn2=append(rn2,hoi[,1][which(hoi[,1]==Treatment[i] & hoi[,2]==Mediator_ok[j])[1]])
Matrix <- matrix(0, nrow = length(Treatment), ncol = length(Mediator_ok))
myData <- data.frame(matrix = Matrix)
colnames(myData) <- Mediator_ok; rownames(myData) <- Treatment
}}} else if (switch==2) {
Treatment=colnames(tv_all)[9:28]; # These names are a bit mixed, by the idea is ok.
Mediator_ok=Outcome[Outcome %in% names(table(hoi[1:dim(hoi)[1],c(3)]))]
# df = data.frame(matrix("", nrow = length(Treatment), ncol = length(Mediator_ok)))
for (i in 1:length(Treatment)) {for (j in 1:length(Mediator_ok)) {
if (z=='dir') {
indir=append(indir,rt2[which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(5)]) #or c(1) hoi 1
ip=append(ip,rt2[which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(6)])} else  {
indir=append(indir,rt2[which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(1)]) #or c(1) hoi 1
ip=append(ip,rt2[which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1],c(2)])}
rn=append(rn,hoi[,3][which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1]]) #change this...
rn2=append(rn2,hoi[,2][which(hoi[,2]==Treatment[i] & hoi[,3]==Mediator_ok[j])[1]])
Matrix <- matrix(0, nrow = length(Treatment), ncol = length(Mediator_ok))
myData <- data.frame(matrix = Matrix)
colnames(myData) <- Mediator_ok; rownames(myData) <- Treatment
}}} # You need three of these, yes :)
tot=cbind(rn2,rn,indir) #or indir or dir
tot=tot[!is.na(tot[,1]),]
tot=as.data.frame(tot)#
uu=data.frame();hou=c()
for (i in 1:length(Treatment)) {hou=names( table(tot[tot[,1]==Treatment[i],2])[table(tot[tot[,1]==Treatment[i],2])>0]);#print(hou)
for (j in 1:length(hou)) {uu=rbind(uu, max(tot[tot[,1]==Treatment[i] & tot[,2]==hou[j],3]))}} #
rr=data.frame()
for (i in 1:length(Treatment)) {hou=names( table(tot[tot[,1]==Treatment[i],2])[table(tot[tot[,1]==Treatment[i],2])>0]);#print(hou)
for (j in 1:length(hou)) {rr=rbind(rr, rownames(tot[tot[,3] == max(tot[tot[,1]==Treatment[i] & tot[,2]==hou[j],3]),]))}} #
uim=cbind(uu,rr)
tot=tot[uim[,2],]
library(reshape2)
jops=dcast(tot, rn2~rn, value.var='indir')
jops[is.na(jops)]=0
rownames(jops)=jops[,1]
jops=jops[,2:dim(jops)[2]]
jops=as.data.frame(jops)
jopsr=matrix(as.numeric(unlist(jops)),nrow=dim(jops)[1],ncol=dim(jops)[2])
colnames(jopsr)=colnames(jops);rownames(jopsr)=rownames(jops)
# print(dim(jopsr)[1] == dim(myData)[1]);print(dim(jopsr)[2] == dim(myData)[2])
if (sum(!rownames(myData) %in% rownames(jopsr))>0) {
to_df=rownames(myData)[!rownames(myData) %in% rownames(jopsr)]
jopsr=rbind(jopsr,myData[to_df,]); jopsr=jopsr[rownames(myData),]}
if (sum(!colnames(myData) %in% colnames(jopsr))>0) {
to_df=colnames(myData)[!colnames(myData) %in% colnames(jopsr)]
jopsr=cbind(jopsr,myData[,to_df]); jopsr=jopsr[,colnames(myData)]}
# if (switch==1) {
#   #for direct:
#   jopsr=jopsr[,Outcome[Outcome %in% colnames(jopsr)]] #c
# } else if (switch==0 ) {
#   #for indirect:
#   ums=groups[order(groups[,'Group']),'Abbreviation']
#   jopsr=jopsr[,ums[ums %in% colnames(jopsr)]]
# }
tot=cbind(rn2,rn,ip)
tot=tot[!is.na(tot[,1]),]
tot=as.data.frame(tot)
tot=tot[uim[,2],]
library(reshape2)
jopsa=dcast(tot, rn2~rn, value.var='ip')
jopsa[is.na(jopsa)]=0
rownames(jopsa)=jopsa[,1]
jopsa=jopsa[,2:dim(jopsa)[2]]
jopsra=matrix(as.numeric(unlist(jopsa)),nrow=dim(jopsa)[1],ncol=dim(jopsa)[2])
colnames(jopsra)=colnames(jopsa);rownames(jopsra)=rownames(jopsa)
colnames(jopsra)=colnames(jopsa);rownames(jopsra)=rownames(jopsa)
if (sum(!rownames(myData) %in% rownames(jopsra))>0) {
to_df=rownames(myData)[!rownames(myData) %in% rownames(jopsra)]
jopsra=rbind(jopsra,myData[to_df,]); jopsra=jopsra[rownames(myData),]}
if (sum(!colnames(myData) %in% colnames(jopsra))>0) {
to_df=colnames(myData)[!colnames(myData) %in% colnames(jopsra)]
jopsra=cbind(jopsra,myData[,to_df]); jopsra=jopsra[,colnames(myData)]}
# df
if (switch==1) {
#for direct:
# jopsra=jopsra[,Outcome[Outcome %in% colnames(jopsra)]];
# jopsr=jopsr[,Outcome[Outcome %in% colnames(jopsr)]]
# jopsra=jopsra[groups[,'Abbreviation'][groups[,'Abbreviation'] %in% rownames(jopsra)],]
# jopsr=jopsr[groups[,'Abbreviation'][groups[,'Abbreviation'] %in% rownames(jopsr)],]
} else if (switch==0) {
#for indirect
jopsra=jopsra[,groups[,'Abbreviation'][groups[,'Abbreviation'] %in% colnames(jopsra)]]
# jopsra=jopsra[,groups[,'Abbreviation'][groups[,'Abbreviation'] %in% colnames(jopsra)]]
#groups[,'Abbreviation'][groups[,'Abbreviation'] %in% colnames(jopsra)]
# jopsra=jopsra[,ums[ums %in% colnames(jopsr)]]
jopsr=jopsr[,groups[,'Abbreviation'][groups[,'Abbreviation'] %in% colnames(jopsr)]]
} else if (switch==2) {
jopsra=jopsra[groups[,'Abbreviation'],]
jopsr=jopsr[groups[,'Abbreviation'],]
# #groups[,'Abbreviation'][groups[,'Abbreviation'] %in% colnames(jopsra)]
# ums=groups[,'Abbreviation']
# jopsra=jopsra[ums,];
# jopsr=jopsr[ums,]
}
setwd("C:/Users/patati/Desktop/TurkuOW/RWork/") #check this if needed...
hip1='transpose';pch.cex=2; #width = 5000;height=2000 width = 2500;height=4000 width = 4000;height=2500;
ho=paste('PFAS vs. bas and lipids_ for the hypo_basic_colors_stea', switch)
if (dim(jopsr)[1]==7) {width = 4000;height=1500} else if (dim(jopsr)[1]==20) {width = 4000;height=2500} else if (dim(jopsr)[1]==36) {width = 2500;height=5000}
resulta1=jopsr
p.mat.a1=jopsra
#https://www.rdocumentation.org/packages/corrplot/versions/0.92/topics/corrplot
#https://cran.r-project.org/web/packages/corrplot/vignettes/corrplot-intro.html
#https://statisticsglobe.com/change-font-size-corrplot-r
#order can be: alphabet, hclust, original #https://stackoverflow.com/questions/51115495/how-to-keep-order-of-the-correlation-plot-labels-as-same-in-the-datafile
order="original"; range='orig';corre='no_renormaa'; type='full'; method='color';ga='All';gf='Female';gm='Male' #color square
cl.offset=20;cl.length=5;cl.cex = 1.3;pch.cex=1.95;pch=3;cl.pos = 'r'; #cl.offset=2;cl.length=5;cl.cex = 1.3;pch.cex=1.95;pch=14;
if (switch==1) {rbo=rev(COL2('RdBu')[25:(length(COL2('RdBu'))-25)]) } else if (switch==0  | switch==2) {rbo=rev(COL2('RdBu')[25:100]) }
# This has been driven:
# resulta1=resulta1[,colnames(resulta2)] #In case you need the column names elsewhere
# for (i in 1:dim(resulta1)[1]) {for (j in 1:dim(resulta1)[2]) {if (resulta1[i,j]==0) {p.mat.a1[i,j]=0.5}}}
# p.mat.a1$column <- unlist(p.mat.a1$column)
# resulta1$column <- unlist(resulta1$column)
# resulta1 <- as.matrix(resulta1); resulta1 <- as.matrix(p.mat.a1)
# resulta1 <- as.matrix(m1);p.mat.a1 <- as.matrix(m4)
# resulta1 <- as.matrix(the_real);p.mat.a1 <- as.matrix(the_real2)
# rbo=rev(COL2('RdBu')[25:(length(COL2('RdBu'))-25)])
# With the neg. you do not put these:
if (dim(resulta1)[2]==36) {
Outcome=colnames(tv_covNS)[c(29:51,59:71)];
Outcome=Outcome[c(1,23,2:22,24:length(Outcome))]
resulta1=resulta1[,Outcome[Outcome %in% colnames(resulta1) ]];p.mat.a1=p.mat.a1[,Outcome[Outcome %in% colnames(p.mat.a1) ]] }
for (i in 1:dim(resulta1)[1]) {for (j in 1:dim(resulta1)[2]) {if (resulta1[i,j]==0) {p.mat.a1[i,j]=0.5}}}
# resulta1 <- t(resulta1);
# p.mat.a1 <- t(p.mat.a1)
path="C:/Users/patati/Documents/GitHub/new/"; setwd(path) #check this if needed...
jpeg(paste("Heatmap of high ACMEs_thusa_real_v7ssaa",date, mn,ho,ga,hip1,".jpg"), width = width, height = height, quality = 100,pointsize = 14, res=300);# par( ps=ps)# par(cex.lab=90) 22 18
# col = brewer.pal(n = 9, name = "YlOrRd")
col=colorRampPalette(c('blue', 'white','orange'), alpha = TRUE)(150)
# col=colorRampPalette(c( 'white','orange'), alpha = TRUE)(150)
# if (corr==TRUE) {if (min(as.matrix(resulta1))< -1  | max(as.matrix(resulta1))> 1) {resulta1=rango(resulta1,-1,1)}} else if (min(as.matrix(resulta1)) >= 0)  {resulta1=rango(resulta1,-1,1)} #
# resulta1=rango(resulta1,-1,1)
# if (min(as.matrix(resulta1)) >= 0  | max(as.matrix(resulta1)) <= 0) {resulta1=rango(resulta1,-1,1)}
corrplot(as.matrix(resulta1), type = type, order = order,method=method, p.mat=as.matrix(p.mat.a1), tl.col = "black", #sum(COL2('RdBu')=="#FF7417")
cl.cex = cl.cex, pch.cex=pch.cex, pch.col='black',pch=pch,#pitikö vain pch lisätä pch väriin väriin... mystistä...'#FEE12B'
sig.level = c(.05),cl.pos = cl.pos, insig = "label_sig", cl.offset=cl.offset,cl.length=cl.length,
tl.srt = 90, diag = TRUE,col=col,is.corr = corr) #only in age...0.001, #rev(COL2('RdBu')[25:(length(COL2('RdBu'))-25)])
#non were significant in neg... but after mody yes!
dev.off()
return(list(resulta1,p.mat.a1))
}
#
z='dir'
uliulie2=houdees(hoi, Outcome, Mediator,switch=0,mn='dir_small',z,corr,date); dim(uliulie2[[1]]) # Indirect v1 effect
setwd("C:/Users/patati/Documents/GitHub/Chorddiagrams")
# setwd("C:/Users/patati/Documents/GitHub/ALL/Coding for INITIALISE/Boxplots")
library(roxygen2); # Read in the roxygen2 R package
gc()
roxygenise()      # Builds the help files; read these separately not in a project I guess
# quite so, tested not in a project file
?group_chords
setwd("C:/Users/patati/Documents/GitHub/Chorddiagrams")
# setwd("C:/Users/patati/Documents/GitHub/ALL/Coding for INITIALISE/Boxplots")
library(roxygen2); # Read in the roxygen2 R package
gc()
roxygenise()      # Builds the help files; read these separately not in a project I guess
# quite so, tested not in a project file
?group_chords
setwd("C:/Users/patati/Documents/GitHub/Chorddiagrams")
# setwd("C:/Users/patati/Documents/GitHub/ALL/Coding for INITIALISE/Boxplots")
library(roxygen2); # Read in the roxygen2 R package
gc()
roxygenise()      # Builds the help files; read these separately not in a project I guess
# quite so, tested not in a project file
?group_chords
